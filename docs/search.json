[
  {
    "objectID": "old-index.html",
    "href": "old-index.html",
    "title": "www",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mrgsolve.org",
    "section": "",
    "text": "mrgsolve is an R package for simulation from hierarchical, ordinary differential equation (ODE) based models typically employed in drug development.\n\n\n\nmrgsolve is distributed as a package for R and utilizes an ODE-solver from ODEPACK which is freely-available in the public domain. We develop mrgsolve on github, with input and contributions from the pharmacometrics modeling and simulation community. We welcome feature requests and bug reports on the GitHub site issue tracker.\n\n\n\n\n\nUser Guide: In-depth description and discussion about how mrgsolve works, including code block reference\nPackage documentation: This is the pkgdown site for mrgsolve.\nR documentation: All mrgsolve documentation that you would find in the R help system\nDoxygen documentation: How to use some of the provided C++ functions in your model\nVignettes: Package vignettes\nGallery: A GitHub repository of short, focused how-to vignettes\nQuick hit demos: Features that you might have a hard time finding in other documentation\n\n\n\n\n\n\nBenchmarks: We simulate data for certain scenarios from both NONMEM and mrgsolve and compare the outputs. All the code needed to run or confirm the outputs is included in the git repository. mrgsolve does not match NONMEM in every way; but there is substantial overlap so that a wide variety of models estimated in NONMEM can be simulated in mrgsolve.\nGitHub Page: Browse source code, find useful examples, get help installing, report issues\nmrgsolve home on CRAN\nSite navagation: A listing of all tagged content on this site, including blog posts and other help / demonstration content\nMetrum Research Group: Our main website\n\n\n\n\n\nThe following is a simple example to illustrate the basics of how mrgsolve works. You can find more examples and usage vignettes in the links above or in the “Help Topics” menu in the nav bar at the top of the mrgsolve.github.io main page.\n\nlibrary(mrgsolve)\n\nFirst, a model object is created. As an introduction, we will use a pre-coded model from an internal library.\n\nmod <- modlib(\"irm1\")\n\nAn overview about this model ::: {.cell}\nmod\n\n. \n. \n. -----------------  source: irm1.cpp  -----------------\n. \n.   project: /Users/kyleb/Rli...gsolve/models\n.   shared object: irm1-so-10e839923148 \n. \n.   time:          start: 0 end: 24 delta: 1\n.                  add: <none>\n. \n.   compartments:  EV1 CENT PERIPH RESP EV2 [5]\n.   parameters:    CL V2 Q V3 KA KA2 KIN KOUT IC50 IMAX n\n.                  VMAX KM [13]\n.   captures:      CP [1]\n.   omega:         0x0 \n.   sigma:         0x0 \n. \n.   solver:        atol: 1e-08 rtol: 1e-08 maxsteps: 20k\n. ------------------------------------------------------\n\n:::\nNext, let’s create an intervention for the model. We do this with an event object. ::: {.cell}\ne <- ev(amt=100, ii=24, addl=3)\n:::\nNow, we simulate with our model object (mod) and the event object (e) ::: {.cell}\nout <- mod %>% ev(e) %>% mrgsim(end=240,delta=0.1)\nout\n\n. Model:  irm1 \n. Dim:    2402 x 8 \n. Time:   0 to 240 \n. ID:     1 \n.     ID time    EV1   CENT  PERIPH  RESP EV2     CP\n. 1:   1  0.0   0.00  0.000 0.00000 5.000   0 0.0000\n. 2:   1  0.0 100.00  0.000 0.00000 5.000   0 0.0000\n. 3:   1  0.1  90.48  9.444 0.04781 4.903   0 0.4722\n. 4:   1  0.2  81.87 17.851 0.18294 4.688   0 0.8926\n. 5:   1  0.3  74.08 25.323 0.39390 4.426   0 1.2662\n. 6:   1  0.4  67.03 31.953 0.67040 4.151   0 1.5977\n. 7:   1  0.5  60.65 37.824 1.00324 3.882   0 1.8912\n. 8:   1  0.6  54.88 43.013 1.38417 3.628   0 2.1507\n\n:::\nAnd plot ::: {.cell}\nplot(out)  \n\n\n\n:::\nThe source code for this model: ::: {.cell}\n$PROB\n# Model: `irm1`\n  - Indirect response model, type 1\n      - Inhibition of response input\n      - Two-compartment PK model\n      - Optional nonlinear clearance\n  - Source: `mrgsolve` internal library\n  - Date: `r Sys.Date()`\n  - Version: `r packageVersion(\"mrgsolve\")`\n\n$PARAM @annotated\nCL   :  1  : Clearance (volume/time)\nV2   : 20  : Central volume (volume)\nQ    :  2  : Inter-compartmental clearance (volume/time)\nV3   : 10  : Peripheral volume of distribution (volume)\nKA   :  1  : Absorption rate constant 1 (1/time)\nKA2  :  1  : Absorption rate constant 2 (1/time)\nKIN  : 10  : Response in rate constant (1/time)\nKOUT :  2  : Response out rate constant (1/time)\nIC50 :  2  : Concentration for 50% of max inhibition (mass/volume)\nIMAX :  1  : Maximum inhibition \nn    :  1  : Emax model sigmoidicity\nVMAX :  0  : Maximum reaction velocity (mass/time)\nKM   :  2  : Michaelis constant (mass/volume)\n\n$CMT  @annotated\nEV1    : First extravascular compartment (mass)\nCENT   : Central compartment (mass)\nPERIPH : Peripheral compartment (mass) \nRESP   : Response compartment\nEV2    : Second extravascular compartment (mass)\n\n$GLOBAL\n#define CP (CENT/V2)\n#define CT (PERIPH/V3)\n#define CLNL (VMAX/(KM+CP))\n#define INH (IMAX*pow(CP,n)/(pow(IC50,n)+pow(CP,n)))\n\n$MAIN\nRESP_0 = KIN/KOUT;\n\n$ODE\ndxdt_EV1    = -KA *EV1;\ndxdt_EV2    = -KA2*EV2;\ndxdt_CENT   =  KA *EV1 + KA2*EV2 - (CL+CLNL+Q)*CP  + Q*CT;\ndxdt_PERIPH =  Q*CP - Q*CT;\ndxdt_RESP   =  KIN*(1-INH) - KOUT*RESP;\n\n$CAPTURE @annotated\nCP : Plasma concentration (mass/volume)\n:::"
  },
  {
    "objectID": "learn.html",
    "href": "learn.html",
    "title": "mrgsolve.org",
    "section": "",
    "text": "Introduction to mrgsolve\n\nPresented at the University of Minnesota Pharmacometrics Summer School, July 2019\nURL: https://github.com/kylebaron/mpss-mrgsolve\n\nIntegrating the R Package mrgsolve With Available Optimization Routines for Parameter Estimation With PK, PK-PD and QSP Models\n\nPresent at the University at Buffalo CDSE Days, April 2019\nURL: https://github.com/metrumresearchgroup/ub-cdse-2019\n\nIntroduction to mrgsolve\n\nPresented at PAGE in June, 2018\nURL: https://github.com/metrumresearchgroup/page-2018-mrgsolve\n\nCase studies with mrgsolve: PBPK and QSP model implementation and utilization in R\n\nPresented at University at Buffalo CDSE Days, April 2018\nPresented at University of Florida, April 2017\nURL: https://github.com/metrumresearchgroup/pbpk-qsp-mrgsolve\n\nModel Visualization Tutorial\n\nPresented in Washington, DC March 2017\nURL: https://github.com/metrumresearchgroup/model-vis-tutorial\n\nR as a single‐step platform for PK/PD and PBPK/QSP M&S: integration of model estimation, optimization, simulation, and reporting\n\nPresented at ACoP 8 2017\nURL: https://github.com/metrumresearchgroup/lvl2-workshop\n\n\n\n\n\n\n\n\nIntroduction to mrgsolve playlist\nPBPK and QSP model implementation and utilization in R part 1 and part 2\nIntroduction to mrgsolve video from 2016 ISoP Study Group"
  }
]